name: 'Terraform'

on:
  push:
    branches: [ "main" ]
  pull_request:

permissions:
  id-token: write
  contents: read

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production
    defaults:
      run:
        shell: bash

    steps:
    - name: Configure aws credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: us-east-2
        role-to-assume: ${{ secrets.ROLE_ASSUME }}

    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.4.6

    - name: Terraform Init
      run: terraform init

    - name: Terraform Format
      run: terraform fmt -check

    - name: Terraform Plan
      run: terraform plan -input=false
      env:
        PREFIX: ${{ vars.TF_VAR_PREFIX }}
        VPC_CIDR_BLOCK: ${{ secrets.TF_VAR_VPC_CIDR_BLOCK }}
        CLUSTER_NAME: ${{ secrets.TF_VAR_CLUSTER_NAME }}
        RETENTION_DAYS: ${{ secrets.TF_VAR_RETENTION_DAYS }}
        DESIRED_SIZE: ${{ secrets.TF_VAR_DESIRED_SIZE }}
        MAX_SIZE: ${{ secrets.TF_VAR_MAX_SIZE }}
        MIN_SIZE: ${{ secrets.TF_VAR_MIN_SIZE }}

    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: terraform apply -auto-approve -input=false
      env:
        PREFIX: ${{ secrets.TF_VAR_PREFIX }}
        VPC_CIDR_BLOCK: ${{ secrets.TF_VAR_VPC_CIDR_BLOCK }}
        CLUSTER_NAME: ${{ secrets.TF_VAR_CLUSTER_NAME }}
        RETENTION_DAYS: ${{ secrets.TF_VAR_RETENTION_DAYS }}
        DESIRED_SIZE: ${{ secrets.TF_VAR_DESIRED_SIZE }}
        MAX_SIZE: ${{ secrets.TF_VAR_MAX_SIZE }}
        MIN_SIZE: ${{ secrets.TF_VAR_MIN_SIZE }}